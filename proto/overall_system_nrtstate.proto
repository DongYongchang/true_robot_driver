// 协议
syntax = "proto3";

// 包名
package system_nrtstate;

// 定义通用的消息头
message Header {
    int64 timestamp = 1;      // 系统时间戳
    int64 frame_id = 2;       // 帧id
}


// 从站信息
message Slave {
  string slave_name = 1; 
  int32 phy_id = 2;         // 从站物理节点号
  int32 alias = 3;          //  从站别名
  int32 slave_state = 4;    //  Init、PreOP、OP、SafeOP
  int32 is_online = 5;    //  是否在线
  bool is_virtual = 6;	    //  是否虚化
  bool is_error = 7;	    //  是否错误
}

// 控制器信息
message Controller {
  repeated Slave slave = 1;   		  // 从站信息
}



// 关节信息
message Joint {
  double max_position = 1;    //  最大角度,rad
  double min_position = 2;	    //  最小角度,rad
  double max_vel = 3;	      //  最大角速度,rad/s
  double min_vel = 4;	    //  最小角速度,rad/s
  double max_acc = 5;           //  最大角速度,rad/s/s
  double min_acc = 6;	    //  最大角速度,rad/s/s
  double max_collision_torque = 7;	   //最大关节碰撞力矩,Nm
}

// tool
message Tool {
	string tool_name = 1; 
	repeated double data= 2; 
}

// wobj
message Wobj {
	string wobj_name = 1; 
	repeated double data= 2; 
}

// load
message Load {
	string load_name = 1; 
	repeated double data= 2; 
}

// point
message Point {
	string point_name = 1; 
	Tool tool= 2; 
	Wobj wobj=3;
	repeated double robottarget=4;
	repeated double jointtarget=5;
}

// 机器人模型信息
message Model {
	string model_name = 1;          // 模型名称
	string model_type = 2;          // 模型类型
	repeated Joint joint = 3;       // 机器人关节初始化信息
	repeated Tool tools = 5;        // 工具位姿集合
	repeated Wobj wobjs = 6;        // 工件位姿集合
	repeated Load loads = 7;        // 负载参数
	repeated Point teach_points = 8;// 负载参数
	bool is_using_sp=9;             //是否使用了自动规避奇异点功能
	bool is_collision_detection=10;             //是否使用了碰撞检测功能
}

// 子系统
message Subsystem {
  string subsystem_name = 1; 
  int32 id = 2;       // 节点
  int32 state = 3;    // 状态
}

// 传感器
message Sensor {
 string sensor_name = 1; 
  int32 id = 2;     // 节点
  int32 state = 3;  // 状态
}

// 接口
message Interface {
 string interface_name = 1; 
  int32 id = 2;    //节点
  int32 state = 3;    //状态
}

// 统一系统状态消息
message SystemNrtState{

  Header head = 1;                    // 消息头
	
  bool system_running_state = 2;		  // 系统状态：

  repeated Model model = 3;   		    // 模型信息
	Controller controller = 4;   		    // 控制器信息 (EhterCAT, CANOPEN, ETHERNET, MODBUS, 其他私有协议)

	repeated Subsystem subsystem = 5;   // 子系统信息 (外部子系统，集成应用)

	repeated Sensor sensor = 6;   		  // 传感器信息 (IMU、摄像头、雷达、激光、编码器, 仅涉及 状态数据)
	
  repeated Interface interface = 7;   // 接口信息 (框架对外呈现的接口形式，如：串口、网络、CAN)
  
  bool system_is_init=8;    //codeit系统是否已经完成了初始化
}